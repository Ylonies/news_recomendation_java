openapi: 3.0.3
info:
  title: Api Documentation
  description: News Recommendation Service
  version: 1.0.11

tags:
  - name: user
    description: User Requests
  - name: catalog
    description: Catalog Requests
  - name: website
    description: Website Requests
  - name: article
    description: Article Requests

paths:
  /user/login:
    post:
      tags:
        - user
      summary: Logs user into the system
      description: ''
      operationId: login
      requestBody:
        description: Login Request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        '200':
          description: successful operation
        '400':
          description: invalid data supplied
        '401':
          description: not authenticated
        '402':
          description: Username/password not found

  /user/register:
    post:
      tags:
        - user
      summary: Creates user
      operationId: register
      requestBody:
        description: Register Request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegister'
      responses:
        '200':
          description: successful operation
        '400':
          description: invalid data supplied

  /user/{catalogName}:
    get:
      tags:
        - user
      summary: Returns catalogs of user
      description: Get catalogs of user
      operationId: getUserCatalogs
      parameters:
        - name: catalogName
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/NameRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogInfo'
        '400':
          description: invalid data supplied
        '401':
          description: not authenticated
  /catalog:
    get:
      tags:
        - catalog
      summary: Returns list of catalogs
      description: ""
      operationId: getCatalogs
      security:
        - BasicHttpAuthentication: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOfCatalogs'
        '401':
          description: not authenticated

  /catalog/{name}:
    get:
      tags:
        - catalog
      summary: Returns catalog with current name
      description: ""
      operationId: getCatalog with name
      security:
        - BasicHttpAuthentication: []
      parameters:
        - name: name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/NameRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogInfo'
        '401':
          description: not authenticated
    post:
      tags:
        - catalog
      summary: Adds catalog with current name
      description: ""
      operationId: addCatalog
      security:
        - BasicHttpAuthentication: []
      parameters:
        - name: name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/NameRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogInfo'
        '400':
          description: invalid data supplied
    delete:
      tags:
        - catalog
      summary: Deletes catalog with current name
      description: ""
      operationId: deleteCatalog
      parameters:
        - name: name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/NameRequest'
      security:
        - BasicHttpAuthentication: []

      responses:
        '200':
          description: successful operation
        '400':
          description: invalid data supplied
        '401':
          description: not authenticated
        '402':
          description: catalog not found
  /website:
    get:
      tags:
        - website
      summary: Returns list of websites
      description: ""
      operationId: getAllServices
      security:
        -  BasicHttpAuthentication: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOfWebsites'
        '401':
          description: not authenticated
  /website/{url}:
    get:
      tags:
        - website
      summary: Returns website with current url
      description: ""
      operationId: getWebsite
      security:
        - BasicHttpAuthentication: []
      parameters:
        - name: url
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/UrlRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebsiteInfo'
        '400':
          description: invalid data supplied
        '401':
          description: not authenticated
        '402':
          description: service not found
    post:
      tags:
        - website
      summary: Adds website with current url
      description: ""
      operationId: postWebsite
      security:
        - BasicHttpAuthentication: []
      parameters:
        - name: url
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/UrlRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebsiteInfo'
        '400':
          description: invalid data supplied
        '401':
          description: not authenticated
        '402':
          description: service not found
    delete:
      tags:
        - website
      summary: Deletes website with current url
      description: ""
      operationId: deleteWebsite
      security:
        - BasicHttpAuthentication: []
      parameters:
        - name: url
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/UrlRequest'
      responses:
        '200':
          description: successful operation
        '400':
          description: invalid data supplied
        '401':
          description: not authenticated
        '402':
          description: service not found


  /atricle/{id}:
    get:
      tags:
        - article
      summary: Returns article with current id
      description: ""
      operationId: getArticleWithId
      security:
        - BasicHttpAuthentication: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/IdRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleInfo'
        '400':
          description: invalid data supplied
        '401':
          description: not authenticated
        '402':
          description: article not found
    post:
      tags:
        - article
      summary: Adds article  with current id
      description: ""
      operationId: postArticle
      security:
        - BasicHttpAuthentication: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/IdRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleInfo'
        '400':
          description: invalid data supplied
        '401':
          description: not authenticated
        '402':
          description: service not found
    delete:
      tags:
        - article
      summary: Deletes article with current url
      description: ""
      operationId: deleteArticle
      security:
        - BasicHttpAuthentication: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/IdRequest'
      responses:
        '200':
          description: successful operation
        '400':
          description: invalid data supplied
        '401':
          description: not authenticated
        '402':
          description: service not found
  /atricle/{catalogName}:
    get:
      tags:
        - article
      summary: Returns articles with current catalog name
      description: ""
      operationId: getArticleWithTopic
      security:
        - BasicHttpAuthentication: []
      parameters:
        - name: catalogName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOfArticles'
        '400':
          description: invalid data supplied
        '401':
          description: not authenticated
        '402':
          description: article not found

components:
  schemas:
    UserLogin:
      type: object
      properties:
        username:
          type: string
          example: theUser
        password:
          type: string
          example: '12345'
    UserRegister:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        username:
          type: string
          example: theUser
        telegramId:
          type: string
          example: john
        password:
          type: string
          example: '12345'
    CatalogInfo:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: ML
    ListOfCatalogs:
      type: array
      items:
        type: object
        properties:
          schema:
            $ref: '#/components/schemas/CatalogInfo'
    WebsiteInfo:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        url:
          type: string
          format: url
          example: 'https://wiki.mipt.tech/'
    ListOfWebsites:
      type: array
      items:
        type: object
        properties:
          schema:
            $ref: '#/components/schemas/WebsiteInfo'
    ArticleInfo:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        url:
          type: string
          format: url
          example: 'https://wiki.mipt.tech/article0'
        catalog_id:
          type: integer
          format: int64
          example: 10
        service_id:
          type: integer
          format: int64
          example: 10
    ListOfArticles:
      type: array
      items:
        type: object
        properties:
          schema:
            $ref: '#/components/schemas/ArticleInfo'
    UrlRequest:
      type: object
      properties:
        url:
          type: string
          format: url
          example: 'https://wiki.mipt.tech/'
    IdRequest:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
    NameRequest:
      type: object
      properties:
        name:
          type: string
  securitySchemes:
    BasicHttpAuthentication:
      type: http
      scheme: basic
